server.port=8080
logging.pattern.console= %yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight(%-5level) %c.%M.%L --  %msg  %mdc%n

#My SQL
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=

#kafka-producer
spring.kafka.bootstrap-servers=
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.jaas.config=
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer



logging.level.org.springframework.kafka=debug


#Feign
feign.client.config.PasswordSavingService.readTimeout=20000
feign.client.config.PasswordSavingService.default-request-headers.Content-Type=application/json
feign.client.config.PasswordSavingService.default-request-headers.Accept=application/json
logging.level.com.example.SpringInitial.Service.PasswordSavingServiceProxy=DEBUG
feign.compression.request.enabled=true
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048


#Circuit breaker
resilience4j.circuitbreaker.instances.PasswordSavingService/getPasswordByEmailAndTitle.failure-rate-threshold=70
resilience4j.circuitbreaker.instances.PasswordSavingService/getPasswordByEmailAndTitle.waitDurationInOpenState=20000
resilience4j.circuitbreaker.instances.PasswordSavingService/getPasswordByEmailAndTitle.minimumNumberOfCalls=50
resilience4j.circuitbreaker.instances.PasswordSavingService/getPasswordByEmailAndTitle.sliding-window-type=time_based
resilience4j.circuitbreaker.instances.PasswordSavingService/getPasswordByEmailAndTitle.sliding-window-size=60000

